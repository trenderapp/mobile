import React, { useEffect, useState } from "react";
import { Appbar } from "react-native-paper";
import SearchBar from 'react-native-dynamic-search-bar';
import { Pressable, View, TouchableOpacity } from "react-native";
import { useNavigation } from "@react-navigation/native";

import { full_width } from "../../Style/style";
import useTheme from "./Theme/useTheme";
import { useTranslation } from "react-i18next";
import useClient from "./Client/useClient";
import { Avatar } from "../Member";

const SearchContainer = ({ children }) => {
    
    const { colors } = useTheme();
    const { client, user } = useClient();
    const { t } = useTranslation();
    const navigation = useNavigation();
    const [text, setText] = useState("");
    const [filter, setFilter] = useState(null)

    /**
     * 
     * @param {String} query 
     * @returns {Object}
     * @example "content de recherche after: 24/12/2022 recherche additionnelle before: 30/12/2022 locale: FR"
     */
    function parseSearchQuery(query) {
        setText(query)
        const keywords = ["after", "before", "locale", "from", "type"];
        let result = {};
      
        keywords.forEach((keyword) => {
          const regex = new RegExp(`${keyword}:\\s*(.+?)(?:\\s+\\w+:|$)`, "i");
          const match = query.match(regex);
          if (match) {
            result[keyword] = match[1].trim();
            query = query.replace(regex, '').trim();
          }
        });
      
        result['query'] = query;
        return setFilter(result);
    }

    return (  
        <View style={{flex: 1, backgroundColor: colors.bg_primary }}>
            <Appbar.Header style={{ width: full_width, backgroundColor: colors.bg_primary, flexDirection: "row" , alignContent: "center", justifyContent: "space-evenly" }}>
                <TouchableOpacity activeOpacity={0.5} onPress={() => navigation.navigate("ProfileStack" , {
                    screen: "ProfileScreen",
                    params: {
                        nickname: user.nickname
                    }
                })}>
                    <Avatar marginLeft={5} marginRight={0} url={client.user.avatar(user?.user_id, user?.avatar)} />
                </TouchableOpacity>
                <View>
                    <SearchBar
                        accessible={false}
                        onSearchPress={() => navigation.navigate("SearchModal", {
                            params: {
                                searchParams: filter,
                                displayText: text
                            }
                        })}
                        searchIconImageStyle={{
                            tintColor: colors.text_normal
                        }}
                        clearIconImageStyle={{
                            tintColor: colors.text_normal
                        }}
                        placeholderTextColor={colors.text_normal}
                        style={{
                            backgroundColor: colors.bg_secondary
                        }}
                        textInputStyle={{
                            color: colors.text_normal
                        }}
                        onClearPress={() => {
                            setFilter(null)
                            return setText(null)
                        }}
                        onChangeText={(t) => parseSearchQuery(t)}
                        placeholder={t("commons.search") + " ..."}
                        />
                </View>
            </Appbar.Header>
            { children }
        </View>
    )
};

export default SearchContainer;